name: LaTex Compile&Upload

on:
  push:
    branches: 
      - main

jobs:
  prepares:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          sparse-checkout: |
            README.md
          sparse-checkout-cone-mode: false

      - name: Getdate and time from README.md
        id: get_datetime
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');

            // Read the README.md file
            const data = fs.readFileSync('README.md', 'utf8');
          
            // Regular expression to match the "Last updated" line
            const regex = /Last updated: (\d{4}-\d{2}-\d{2}--\d{2}-\d{2}-\d{2})/;
          
            // Find the match
            const match = data.match(regex);
          
            if (match) {
                // Extract the date and time from the match
                const dateTime = match[1];
                console.log(`Date and Time: ${dateTime}`);
                return dateTime;
            } else {
                console.log('No "Last updated" line found.');
                return match;
            }
           
      - name: Set output
        id: set_output
        run: |
          echo "::set-output name=date_time::${{ steps.get_datetime.outputs.result }}"
          echo "::set-output name=file_name::${{ steps.get_datetime.outputs.result }}_Dissertation.pdf"
    outputs:
      date_time: ${{ steps.set_output.outputs.date_time }}
      file_name: ${{ steps.set_output.outputs.file_name }}

  build_latex:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: LaTex Compile
        uses: xu-cheng/texlive-action@v2
        with:
          scheme: full
          run: | 
            lualatex -shell-escape -interaction=nonstopmode -file-line-error "main".tex
            lualatex -shell-escape -interaction=nonstopmode -file-line-error "main".tex
            lualatex -shell-escape -interaction=nonstopmode -file-line-error "main".tex
            lualatex -shell-escape -interaction=nonstopmode -file-line-error -jobname=captioned_output "\def\showlabels{}\input{main.tex}"         
            lualatex -shell-escape -interaction=nonstopmode -file-line-error -jobname=captioned_output "\def\showlabels{}\input{main.tex}"         
            lualatex -shell-escape -interaction=nonstopmode -file-line-error -jobname=captioned_output "\def\showlabels{}\input{main.tex}"         

      - name: Upload main PDF as artifact
        uses: actions/upload-artifact@v4
        with:
          name: output_pdf
          path: main.pdf

      - name: Upload captioned PDF as artifact
        uses: actions/upload-artifact@v4
        with:
          name: captioned_output_pdf
          path: captioned_output.pdf
    
  get_prev_state:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 3

        # Determine HEAD~1 commit
      - name: Get HEAD~1 commit
        id: get_previous_commit
        run: |
          COMMIT_SHA=$(git rev-parse HEAD~1)
          echo "Commit SHA: $COMMIT_SHA"
          echo "commit_sha=$COMMIT_SHA" >> $GITHUB_ENV

        # Checkout the repo at HEAD~1
      - name: Checkout at HEAD~1
        uses: actions/checkout@v3
        with:
          ref: ${{ env.commit_sha }}

      - name: Upload tex as artifact
        uses: actions/upload-artifact@v4
        with:
          name: prev_main_tex
          path: main.tex

  # compare_versions:
  #   needs: [build_latex]
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout Current Version
  #       uses: actions/checkout@v4
      
  #     - name: Checkout Previous Version
  #       uses: actions/checkout@v4
  #       with:
  #         ref: ${{ github.event.before }} # Checkout the commit before the latest push
  #         path: prev_version # Store the previous version in a separate directory

  #     - name: Run latexdiff
  #       run: |
  #         sudo apt-get update
  #         sudo apt-get install -y latexdiff
  #         cd prev_version
  #         latexdiff main.tex ../main.tex > diff_main.tex
  #         mv diff_main.tex ../

  #     - name: LaTex Compile
  #       uses: xu-cheng/texlive-action@v2
  #       with:
  #         scheme: full
  #         run: |
  #           lualatex -shell-escape -interaction=nonstopmode -file-line-error diff_main.tex
  #           lualatex -shell-escape -interaction=nonstopmode -file-line-error diff_main.tex
  #           lualatex -shell-escape -interaction=nonstopmode -file-line-error diff_main.tex

  #     - name: Upload Diff PDF as Artifact
  #       uses: actions/upload-artifact@v4
  #       with:
  #         name: diff_output_pdf
  #         path: diff_main.pdf

  create_and_upload_release:
    needs: [build_latex, prepares, get_prev_state]
    runs-on: ubuntu-latest
    steps:
      - name: Check outputs
        id: check_outputs
        run: |
          echo "${{ needs.prepares.outputs.date_time }}"
          echo "${{ needs.prepares.outputs.file_name }}"
  
      - name: Download PDF artifact
        uses: actions/download-artifact@v4
        with:
            name: output_pdf

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        with:
          tag_name: Release-${{ needs.prepares.outputs.date_time }}
          release_name: Release ${{ needs.prepares.outputs.date_time }}
          draft: false
          prerelease: false
      
      - name: Upload pdf to Release
        id: upload_pdf_to_release      
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./main.pdf
          asset_name: ${{ needs.prepares.outputs.file_name }}
          asset_content_type: application/pdf
      
      - name: Download tex artifact
        uses: actions/download-artifact@v4
        with:
            name: prev_main_tex

      - name: Upload tex to Release
        id: upload_tex_to_release      
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./main.tex
          asset_name: main_prev.tex
          asset_content_type: text/plain